@model BillRecordEdit

<!-- Flowbite CSS -->
<style>
    .modal-content {
        padding: 20px;
    }

    .form-group {
        margin-bottom: 1rem;
    }
</style>

<!-- Modal structure -->
<div id="addPurchaseOrderModal" tabindex="-1" aria-hidden="true" class="fixed inset-0 z-50 flex items-center justify-center overflow-y-auto bg-gray-800 bg-opacity-50">
    <div class="relative w-full max-w-2xl">
        <div class="bg-white rounded-lg shadow">
            <!-- Modal header -->
            <div class="modal-content">
                <h3 class="text-xl font-semibold text-gray-900">
                    Sale Product
                </h3>
                <button type="button" class="absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center" data-modal-hide="#addPurchaseOrderModal">
                    <svg aria-hidden="true" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 011.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                    </svg>
                    <span class="sr-only">Close</span>
                </button>
            </div>
            <!-- Modal body -->
            <div class="modal-content">
                <form>
                    <div class="form-group">
                        <label for="supplierName" class="block mb-2 text-sm font-medium text-gray-900">Customer Name:</label>
                        <input type="text" id="supplierName" class="block w-full px-3 py-2 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500" placeholder="Enter customer name">
                    </div>
                    <div class="overflow-x-auto relative">
                        <table class="w-full text-sm text-left text-gray-500">
                            <thead class="text-xs text-gray-700 uppercase bg-gray-50">
                                <tr>
                                    <th scope="col" class="px-6 py-3">S.N</th>
                                    <th scope="col" class="px-6 py-3">Product Name</th>
                                    <th scope="col" class="px-6 py-3">Rate</th>
                                    <th scope="col" class="px-6 py-3">Quantity</th>
                                    <th scope="col" class="px-6 py-3">Amount</th>
                                </tr>
                            </thead>
                            <tbody id="billDetailsTableBody">
                                @{
                                    int index = 1;
                                }

                                @foreach (var item in Model.BillDetails)
                                {
                                    <tr>
                                        <td>@(i + 1)</td>
                                        <td>
                                            <input type="text" name="BillDetails[@i].Product.ProName" value="@Model.BillDetails[i].Product.ProName" readonly />
                                        </td>
                                        <td>
                                            <input type="number" name="BillDetails[@i].Product.ProPrice" value="@Model.BillDetails[i].Product.ProPrice" readonly />
                                        </td>
                                        <td>
                                            <input type="number" name="BillDetails[@i].Quantity" value="@Model.BillDetails[i].Quantity" />
                                        </td>
                                        <td>
                                            <input type="number" name="BillDetails[@i].Amount" value="@Model.BillDetails[i].Amount" readonly />
                                        </td>
                                    </tr>
                                    index++;
                                }
                            </tbody>
                        </table>
                    </div>

                    <div class="form-group mt-4">
                        <label for="totalAmount" class="block mb-2 text-sm font-medium text-gray-900">Total Amount:</label>
                        <input type="number" id="totalAmount" class="block w-full px-3 py-2 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500" placeholder="Total amount" readonly>
                    </div>
                </form>
            </div>
            <!-- Modal footer -->
            <div class="modal-content flex justify-end space-x-2">
                <button type="button" class="px-5 py-2 text-sm font-medium text-gray-900 bg-white border border-gray-300 rounded-lg hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-blue-300" data-modal-hide="#addPurchaseOrderModal">Close</button>
                <button type="button" class="px-5 py-2 text-sm font-medium text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300">Create</button>
            </div>
        </div>
    </div>
</div>

<script>
    function calculateAmount() {
        const rows = document.querySelectorAll('#billDetailsTableBody tr');
        let totalAmount = 0;

        rows.forEach(row => {
            const rateInput = row.querySelector('input[data-rate]');
            const quantityInput = row.querySelector('.quantity');
            const amountInput = row.querySelector('.amount');

            const rate = parseFloat(rateInput.value) || 0;
            const quantity = parseFloat(quantityInput.value) || 0;
            const amount = rate * quantity;

            amountInput.value = amount.toFixed(2);

            totalAmount += amount;
        });

        document.getElementById('totalAmount').value = totalAmount.toFixed(2);
    }

    document.querySelectorAll('.quantity').forEach(input => {
        input.addEventListener('input', calculateAmount);
    });

    // Initial calculation
    calculateAmount();
</script>
